Description: 15 Puzzle
Date: 15 FEB 2016
Author: Andrii Grytsenko
Programing Language: Python (on-line interpreter www.codeskulptor.org)

Section 1. Data structures
Name: lstPlaces (List of places)
Type: List (ordered)
Description: Contains 16 places for 15 Draughts (one place remains empty). 
Places have IDs from 0 to 15. In places we will store ID of draughts. 
Classicaly draughts numbered from 1 to 15. 
Here draughts will be internaly marked (have IDs) from 0 to 14.
During drawing draught's label we will add "1" to draught's ID.
Empty place will have ID 15. We will check this special number to draw an emply space instead of draught with label "16".
So desired state of a game will correspond to sorted list: 0, 1, 2, ..., 14, 15.
This state is equal to expression "Each place contains draught with ID that is equal to place's ID" (lstPlaces[i]==i).
Places are organized in four rows with four cells in each.
Row number is equal to [place ID / 4]: 0..3
Cell number is equal to [place ID % 4]: 0..3
Example 1: expression "lstPlaces[2] == 3" means "Draught with ID==3 (and with label=="4") now is laying at place with ID==2". Here row is 0 (2/4=0) and cell is 2 (2%4=2).
Example 2: expression "lstPlaces[10] == 15" means "Place with ID==10 is emply". Here row is 2 (10/4=2) and cell is 2 (10%4=2).

Name: lstMovableDraughts (List of places)
Type: List (ordered)
Description: Contains from 2 to 4 places from where is it possible to move draught to free place.

Name:
Type:
Description: 

Name:
Type:
Description: 
/////////////////////////////


Name: isOrdered
In: ?
Out: ?
Description:
